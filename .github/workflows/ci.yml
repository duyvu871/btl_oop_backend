name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  test_backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v6
        with:
          python-version: "3.11"
      - run: pip install uv
      - name: Install dependencies
        working-directory: backend
        run: uv sync --dev
      - name: Lint
        working-directory: backend
        run: uv run ruff check .
      - name: Run tests
        working-directory: backend
        run: uv run pytest -q || [ $? -eq 5 ]

  build_and_push_backend:
    needs: test_backend
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: adc300/btl_oop
    steps:
      - uses: actions/checkout@v5
      - uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker meta (tags)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=sha,prefix=sha-

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

    outputs:
      image_latest: ${{ env.IMAGE_NAME }}:latest
      image_sha: ${{ env.IMAGE_NAME }}:sha-${{ github.sha }}

  notify:
    runs-on: ubuntu-latest
    needs:
      - build_and_push_backend
      - test_backend
    if: always()
    permissions:
      actions: read
      contents: read
    steps:
      - uses: actions/checkout@v5
      - name: Send webhook
        uses: ./.github/actions/notify
        with:
          webhook_url: ${{ secrets.WEBHOOK_URL }}
          webhook_secret: ${{ secrets.WEBHOOK_SECRET }}