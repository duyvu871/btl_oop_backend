services:
  fastapi:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "8000:8000"
    env_file:
      - .env.dev
    environment:
      - DEBUG=${DEBUG}
      - FRONTEND_URL=${FRONTEND_URL}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_SERVER=postgres
      - POSTGRES_DB=${POSTGRES_DB}
      - REDIS_URL=redis://redis:6379
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - QDRANT_URL=http://qdrant:6333
      - SECRET_KEY=${SECRET_KEY}
      - ALGORITHM=${ALGORITHM}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES}
      - SMTP_TLS=${SMTP_TLS}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - EMAILS_FROM_EMAIL=${EMAILS_FROM_EMAIL}
      - EMAILS_FROM_NAME=${EMAILS_FROM_NAME}
      - SENTRY_DSN=${SENTRY_DSN}
      - FIRST_SUPERUSER=${FIRST_SUPERUSER}
      - FIRST_SUPERUSER_PASSWORD=${FIRST_SUPERUSER_PASSWORD}
      - ARQ_QUEUE_NAME=${ARQ_QUEUE_NAME:-arq:queue}
      - ARQ_MAX_JOBS=${ARQ_MAX_JOBS:-10}
      - ARQ_JOB_TIMEOUT=${ARQ_JOB_TIMEOUT:-300}
    depends_on:
      - qdrant
      - postgres
      - redis
    volumes:
      - ./backend:/app
      - /app/.venv
    working_dir: /app
    command: uv run uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload

  worker_send_mail:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    env_file:
      - .env.dev
    environment:
      - UV_LINK_MODE=copy
      - DEBUG=${DEBUG}
      - FRONTEND_URL=${FRONTEND_URL}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_SERVER=postgres
      - POSTGRES_DB=${POSTGRES_DB}
      - REDIS_URL=redis://redis:6379
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - QDRANT_URL=http://qdrant:6333
      - SECRET_KEY=${SECRET_KEY}
      - ALGORITHM=${ALGORITHM}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES}
      - SMTP_TLS=${SMTP_TLS}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - EMAILS_FROM_EMAIL=${EMAILS_FROM_EMAIL}
      - EMAILS_FROM_NAME=${EMAILS_FROM_NAME}
      - SENTRY_DSN=${SENTRY_DSN}
      - ARQ_QUEUE_NAME=${ARQ_QUEUE_NAME:-arq:queue}
      - ARQ_MAX_JOBS=${ARQ_MAX_JOBS:-10}
      - ARQ_JOB_TIMEOUT=${ARQ_JOB_TIMEOUT:-300}
    depends_on:
      - redis
      - postgres
    volumes:
      - ./backend:/app
      - /app/.venv
    working_dir: /app
    command: uv run arq src.workers.send_mail.WorkerSettings
    restart: unless-stopped

  qdrant:
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage

  postgres:
    image: postgres:13
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  mkdocs:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "8001:8000"
    volumes:
      - ./backend:/app
      - /app/.venv
    working_dir: /app
    command: uv run mkdocs serve --dev-addr 0.0.0.0:8000
    profiles:
      - with-docs

volumes:
  qdrant_data:
  postgres_data:
  redis_data:
